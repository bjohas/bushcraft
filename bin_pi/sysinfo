#!/usr/bin/perl

# http://elinux.org/RPI_vcgencmd_usage
# https://major.io/icanhazip-com-faq/

if (-e "/boot/bootcode.bin") {
# needs to be run as sudo
    ($whoami = `whoami`) =~ s/\n//;
    if ($whoami ne "root") {
	print "Restarting as root!";
	system "sudo $0 $ARGV[0]";
	exit;
    };
    $logs = "/boot/logs";
    if (!-e $logs) {
	mkdir($logs);
    };
    system "cat /proc/cpuinfo > $logs/cpuinfo.txt";
    system "ifconfig > $logs/ifconfig.txt";
    ($serial = `cat /proc/cpuinfo | grep Serial`) =~ s/Serial\s+\:\s+//;
    $serial =~ s/\n//;
    system "echo '$serial' > $logs/serial.txt";
    system "wget -q -O $logs/external_ip.txt http://icanhazip.com/";
    system "hostname > $logs/hostname.txt";
    system "hostname -I > $logs/hostname-I.txt";
    system "vcgencmd version > $logs/vcgencmd.version.txt";
    system "vcgencmd measure_temp > $logs/vcgencmd.measure_temp.txt";
    system "vcgencmd measure_volts core > $logs/vcgencmd.measure_volts.core.txt";
    system "who > $logs/who.txt";
    system "last > $logs/last.txt";
    system "uptime > $logs/uptime.txt";
    system "procinfo > $logs/procinfo.txt";
    system "rm $logs/sysinfo_logs.tgz; tar zcvf $logs/sysinfo_logs.tgz $logs/*txt;"; 
    if ($ARGV[0] eq "--archive") {
	if (!-d "$ENV{HOME}/logs/") {
	    mkdir("$ENV{HOME}/logs/");
	};
	($date = `date +'%Y%m%d_%H%M%S'`) =~ s/\n//;
	system "cp '$logs/sysinfo_logs.tgz' '$ENV{HOME}/logs/sysinfo_logs_$date.tgz'";
	print "Archived to $ENV{HOME}/logs/sysinfo_logs_$date.tgz\n";
    };
    system "cp '$logs/sysinfo_logs.tgz' '$ENV{HOME}/Desktop'";
} else {
    print "
This script is meant for running on Raspberry Pi only.
Exiting.
";
};
